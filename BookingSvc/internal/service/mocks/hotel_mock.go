// Code generated by MockGen. DO NOT EDIT.
// Source: hotel.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	hotelpb "github.com/Quizert/room-reservation-system/HotelSvc/api/grpc/hotelpb"
	gomock "github.com/golang/mock/gomock"
)

// MockHotelClient is a mock of HotelClient interface.
type MockHotelClient struct {
	ctrl     *gomock.Controller
	recorder *MockHotelClientMockRecorder
}

// MockHotelClientMockRecorder is the mock recorder for MockHotelClient.
type MockHotelClientMockRecorder struct {
	mock *MockHotelClient
}

// NewMockHotelClient creates a new mock instance.
func NewMockHotelClient(ctrl *gomock.Controller) *MockHotelClient {
	mock := &MockHotelClient{ctrl: ctrl}
	mock.recorder = &MockHotelClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHotelClient) EXPECT() *MockHotelClientMockRecorder {
	return m.recorder
}

// GetRoomsByHotelId mocks base method.
func (m *MockHotelClient) GetRoomsByHotelId(ctx context.Context, req *hotelpb.GetRoomsRequest) (*hotelpb.GetRoomsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoomsByHotelId", ctx, req)
	ret0, _ := ret[0].(*hotelpb.GetRoomsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomsByHotelId indicates an expected call of GetRoomsByHotelId.
func (mr *MockHotelClientMockRecorder) GetRoomsByHotelId(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomsByHotelId", reflect.TypeOf((*MockHotelClient)(nil).GetRoomsByHotelId), ctx, req)
}
