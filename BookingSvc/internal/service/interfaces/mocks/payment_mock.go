// Code generated by MockGen. DO NOT EDIT.
// Source: payment.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/Quizert/room-reservation-system/BookingSvc/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockPaymentSystemClient is a mock of PaymentSystemClient interface.
type MockPaymentSystemClient struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentSystemClientMockRecorder
}

// MockPaymentSystemClientMockRecorder is the mock recorder for MockPaymentSystemClient.
type MockPaymentSystemClientMockRecorder struct {
	mock *MockPaymentSystemClient
}

// NewMockPaymentSystemClient creates a new mock instance.
func NewMockPaymentSystemClient(ctrl *gomock.Controller) *MockPaymentSystemClient {
	mock := &MockPaymentSystemClient{ctrl: ctrl}
	mock.recorder = &MockPaymentSystemClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentSystemClient) EXPECT() *MockPaymentSystemClientMockRecorder {
	return m.recorder
}

// CreatePaymentRequest mocks base method.
func (m *MockPaymentSystemClient) CreatePaymentRequest(ctx context.Context, paymentRequest *models.PaymentRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePaymentRequest", ctx, paymentRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePaymentRequest indicates an expected call of CreatePaymentRequest.
func (mr *MockPaymentSystemClientMockRecorder) CreatePaymentRequest(ctx, paymentRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePaymentRequest", reflect.TypeOf((*MockPaymentSystemClient)(nil).CreatePaymentRequest), ctx, paymentRequest)
}
